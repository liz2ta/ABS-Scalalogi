// to compile
// absc --erlang test/TestPort/*.abs common/Channel/*.abs common/Stream/*.abs common/Port/*.abs


module TestP;

import * from Channel;
import * from Message;
import * from Stream;
import * from Port;

{
  StreamM msgs1 = list[1,2,3,4,5,6,7,8,9,10];
  StreamM msgs2 = list[11,12,13,14,15,16,17,18,19,20];
  StreamM intermediate = Nil;

  ChannelI c = new Channel(0);
  PortI p = new Port(c);

   p!send(msgs1);
  await duration(1,1);
  intermediate = await p!receive();
  await duration(1,1);
  Int size = length(intermediate);
  Int i = 0;
  Message m = 0;

  while(i<size){
    m = head(intermediate);
    intermediate = tail(intermediate);
    println(`we have received $m$`);
    i = i+1;
  }
  println(`we finished processing the first batch`);


   p!send(msgs2);
  await duration(1,1);
  intermediate = await p!receive();
  await duration(1,1);
  size = length(intermediate);
  i = 0;

  while(i<size){
    m = head(intermediate);
    intermediate = tail(intermediate);
    println(`we have received $m$`);
    i = i+1;
  }
  println(`we finished processing the second batch`);
}
