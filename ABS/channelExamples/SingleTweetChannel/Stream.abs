// to compile
// absc --erlang SingleTweetChannel/*.abs Channel/*.abs

module Stream;
export *;

import * from Message;
import * from Tweet;

interface StreamI {
  //manual stream
  Unit stream1();
}

class Stream(InputI input) implements StreamI {

  Unit stream1() {
    List<Message> msgs = list[
            Tweet("author1", list["ht1","ht2"]),
            Tweet("author2", list["ht3"]),
            Tweet("author3", list["ht1","ht2"]),
            Tweet("author4", list["ht3","ht2"]),
            Tweet("author5", list["ht2"]),
            Tweet("author1", list["ht1","ht3","ht5"]),
            Tweet("author3", list["ht1"]),
            Tweet("author2", list["ht1"])];

    Int size = length(msgs);
    Int i = 0;

    while (i<size) {
      await input!fire(nth(msgs,i));
      println(`we have input $nth(msgs,i)$`);
      i = i+1;
    }
  }
}
