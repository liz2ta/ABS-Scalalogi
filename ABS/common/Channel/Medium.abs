module Medium;
import * from Event;
export *;

interface MediumI {
  Unit send(Event m);
  Event receive();
}

//if size = 0, then unbounded channel
class Medium(Int size) implements MediumI {
  List<Event> msgs = Nil;
  Unit send(Event m) {
      if (size == 0) msgs = appendright(msgs, m);
      else {
        await (length(msgs)<=size);
        msgs = appendright(msgs, m);
      }
   }
  Event receive() {
    await !isEmpty(msgs);
    Event h = head(msgs);
    msgs = tail(msgs);
    return h;
  }
}
